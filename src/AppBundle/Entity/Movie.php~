<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\ORM\EntityManager;

/**
 * @ORM\Entity
 * @ORM\Table(name="Movie")
 */
class Movie {
	
	/**
	 * @ORM\Column(type="integer")
	 * @ORM\Id
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	private $movie_id;
	
	
	/**
	 * @ORM\Column(type="string",length=30)
	 */
	private $movie_name;
	
	/**
	 * @ORM\Column(type="string",length=150)
	 */
	private $movie_desc;
        
        /**
	 * @ORM\Column(type="integer")
	 */
	private $movie_price;
        
        /**
	 * @ORM\Column(type="string", length=30)
	 */
	private $movie_imagePath;
	

    /**
     * Set movieId
     *
     * @param integer $movieId
     *
     * @return Movie
     */
    public function setMovieId($movieId)
    {
        $this->movie_id = $movieId;

        return $this;
    }

    /**
     * Get movieId
     *
     * @return integer
     */
    public function getMovieId()
    {
        return $this->movie_id;
    }

    /**
     * Set genreId
     *
     * @param integer $genreId
     *
     * @return Movie
     */
    public function setGenreId($genreId)
    {
        $this->genre_id = $genreId;

        return $this;
    }

    /**
     * Get genreId
     *
     * @return integer
     */
    public function getGenreId()
    {
        return $this->genre_id;
    }

    /**
     * Set movieName
     *
     * @param string $movieName
     *
     * @return Movie
     */
    public function setMovieName($movieName)
    {
        $this->movie_name = $movieName;

        return $this;
    }

    /**
     * Get movieName
     *
     * @return string
     */
    public function getMovieName()
    {
        return $this->movie_name;
    }

    /**
     * Set movieDesc
     *
     * @param string $movieDesc
     *
     * @return Movie
     */
    public function setMovieDesc($movieDesc)
    {
        $this->movie_desc = $movieDesc;

        return $this;
    }

    /**
     * Get movieDesc
     *
     * @return string
     */
    public function getMovieDesc()
    {
        return $this->movie_desc;
    }
    
    /*Register Movie*/
    public static function register($genre_id, $movie_name, $movie_desc, EntityManager $em){
        $movie = new Movie();
        $movie->setGenreId($genre_id);
        $movie->setMovieName($movie_name);
        $movie->setMovieDesc($movie_desc);
        Movie::registerToDB($movie, $em);
        return 1;
    }
    
    public static function update($movie_id, $genre_id, $movie_name, $movie_desc, EntityManager $em){
        $movie = Movie::getTheMovie($movie_id, $em);
        $movie->setGenreId($genre_id);
        $movie->setMovieName($movie_name);
        $movie->setMovieDesc($movie_desc);
        $em->flush();
        return 1;
    }
    
    public static function remove($movie_id, EntityManager $em){
        $movie = Movie::getTheMovie($movie_id, $em);
        $em->remove($movie);
        $em->flush();
        return 1;
    }
    
    
    /* Fetching all the movies */
    public static function getAllMovies(EntityManager $em) {
        $moviesRepository = $em->getRepository("AppBundle:Movie");
        $movies = $moviesRepository->findAll();
        if ($movies) {
            return $movies;
        } else {
            return null;
        }
    }
    
    /*Fetching one movie by Id*/
    public static function getTheMovie($movieId, EntityManager $em) {
        $moviesRepository = $em->getRepository("AppBundle:Movie");
        $movie = $moviesRepository->find($movieId);
        if ($movie) {
            return $movie;
        } else {
            return null;
        }
    }
    
    /* Register any object to DB */
    public static function registerToDB($object, EntityManager $em) {
        try {
            $em->persist($object);
            $em->flush();
        } catch (Exeption $e) {
            return false;
        }
        return true;
    }
}
